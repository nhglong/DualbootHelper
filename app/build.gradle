plugins {
    id 'com.android.application'
}

def locales = file('src/main/res').listFiles(new FilenameFilter() {
    @Override
    boolean accept(File dir, String name) {
        return name.matches('values-.*') && new File(dir, name).list().contains('strings.xml')
    }
}).collect { it.name.substring(7) }

print("Locales: " + locales.join(', '))

android {
    namespace 'com.david42069.dualboothelper' /*TODO: change packageName*/
    compileSdk 34

    defaultConfig {
        applicationId "com.david42069.dualboothelper" /*TODO: change packageName*/
        minSdk 26
        targetSdk 33
        versionCode 4
        versionName "3.1.0"

        resConfigs locales
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        buildConfig true
        viewBinding true
    }

    signingConfigs {
        release {
            storeFile file("../release_key.jks")
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEY_ALIAS")
            keyPassword System.getenv("KEYSTORE_PASSWORD")

            enableV1Signing = true
            enableV2Signing = true
            enableV3Signing = true
            enableV4Signing = true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

configurations.all {
    exclude group: 'androidx.appcompat', module: 'appcompat'
    exclude group: 'androidx.core', module: 'core'
    exclude group: 'androidx.drawerlayout', module: 'drawerlayout'
    exclude group: 'androidx.viewpager', module: 'viewpager'
    exclude group: 'androidx.fragment', module: 'fragment'
    exclude group: 'androidx.customview', module: 'customview'
    exclude group: 'androidx.coordinatorlayout', module: 'coordinatorlayout'
    exclude group: 'com.android.support', module: 'support-compat'
}

dependencies {
    implementation 'androidx.core:core-splashscreen:1.0.1'
    implementation 'io.github.oneuiproject:design:1.2.6'
    implementation 'io.github.oneuiproject:icons:1.1.0'
    implementation 'io.github.oneuiproject.sesl:appcompat:1.4.0'
    implementation 'io.github.oneuiproject.sesl:material:1.5.0'
    implementation 'io.github.oneuiproject.sesl:recyclerview:1.4.1'
    implementation 'io.github.oneuiproject.sesl:preference:1.1.0'
    implementation 'io.github.oneuiproject.sesl:coordinatorlayout:1.0.0'
    implementation 'io.github.oneuiproject.sesl:drawerlayout:1.0.0'
    implementation 'io.github.oneuiproject.sesl:viewpager:1.1.0'
    implementation 'io.github.oneuiproject.sesl:viewpager2:1.1.0'
    implementation 'io.github.oneuiproject.sesl:swiperefreshlayout:1.0.0'
    implementation 'io.github.oneuiproject.sesl:apppickerview:1.0.0'
    implementation 'io.github.oneuiproject.sesl:indexscroll:1.0.3'
    implementation 'io.github.oneuiproject.sesl:picker-basic:1.2.0'
    implementation 'io.github.oneuiproject.sesl:picker-color:1.1.0'
    implementation 'com.airbnb.android:lottie:6.6.3'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
}

dependencies {
    def libsuVersion = '6.0.0'

    // The core module that provides APIs to a shell
    implementation "com.github.topjohnwu.libsu:core:${libsuVersion}"

    // Optional: APIs for creating root services. Depends on ":core"
    implementation "com.github.topjohnwu.libsu:service:${libsuVersion}"

    // Optional: Provides remote file system support
    implementation "com.github.topjohnwu.libsu:nio:${libsuVersion}"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
